var accordionStatus=localStorage.getItem("accordionStatus");null===accordionStatus&&localStorage.setItem("accordionStatus","false");var accordionNo=null;null===accordionNo&&localStorage.setItem("accordionNo","-1"),function($,window,document,undefined){"use strict";function Plugin(element,options){$this=$(element),this.element=element,this.settings=$.extend({},defaults,options),this._defaults=defaults,this._name=pluginName,this.init()}var pluginName="storeLocator";if(void 0===$.fn[pluginName]&&"undefined"!=typeof google){var $this,listTemplate,infowindowTemplate,dataTypeRead,originalOrigin,originalData,originalZoom,dataRequest,searchInput,addressInput,olat,olng,storeNum,directionsDisplay,directionsService,prevSelectedMarkerBefore,prevSelectedMarkerAfter,firstRun,featuredset=[],locationset=[],normalset=[],markers=[],filters={},locationData={},GeoCodeCalc={},mappingObj={},defaults={ajaxData:null,altDistanceNoResult:!1,autoComplete:!1,autoCompleteDisableListener:!1,autoCompleteOptions:{},autoGeocode:!1,bounceMarker:!0,catMarkers:null,dataLocation:"../needreplace/media/Project/ToyotaTheme/Common/js/plugins/storeLocator/data/locations.json",dataRaw:null,dataType:"json",debug:!1,defaultLat:null,defaultLng:null,defaultLoc:!1,disableAlphaMarkers:!1,distanceAlert:60,dragSearch:!1,exclusiveFiltering:!1,exclusiveTax:null,featuredLocations:!1,fullMapStart:!1,fullMapStartBlank:!1,fullMapStartListLimit:!1,infoBubble:null,inlineDirections:!1,lengthUnit:"m",listColor1:"#ffffff",listColor2:"#eeeeee",loading:!1,locationsPerPage:10,mapSettings:{zoom:12,mapTypeId:google.maps.MapTypeId.ROADMAP,styles:[{elementType:"geometry",stylers:[{color:"#f5f5f5"}]},{elementType:"labels.icon",stylers:[{visibility:"off"}]},{elementType:"labels.text.fill",stylers:[{color:"#616161"}]},{elementType:"labels.text.stroke",stylers:[{color:"#f5f5f5"}]},{featureType:"administrative.land_parcel",elementType:"labels.text.fill",stylers:[{color:"#bdbdbd"}]},{featureType:"poi",elementType:"geometry",stylers:[{color:"#eeeeee"}]},{featureType:"poi",elementType:"labels.text.fill",stylers:[{color:"#757575"}]},{featureType:"poi.park",elementType:"geometry",stylers:[{color:"#e5e5e5"}]},{featureType:"poi.park",elementType:"labels.text.fill",stylers:[{color:"#9e9e9e"}]},{featureType:"road",elementType:"geometry",stylers:[{color:"#ffffff"}]},{featureType:"road.arterial",elementType:"labels.text.fill",stylers:[{color:"#757575"}]},{featureType:"road.highway",elementType:"geometry",stylers:[{color:"#dadada"}]},{featureType:"road.highway",elementType:"labels.text.fill",stylers:[{color:"#616161"}]},{featureType:"road.local",elementType:"labels.text.fill",stylers:[{color:"#9e9e9e"}]},{featureType:"transit.line",elementType:"geometry",stylers:[{color:"#e5e5e5"}]},{featureType:"transit.station",elementType:"geometry",stylers:[{color:"#eeeeee"}]},{featureType:"water",elementType:"geometry",stylers:[{color:"#c9c9c9"}]},{featureType:"water",elementType:"labels.text.fill",stylers:[{color:"#9e9e9e"}]}]},markerCluster:null,markerImg:null,markerDim:null,maxDistance:!1,modal:!1,nameAttribute:"name",nameSearch:!1,noForm:!1,openNearest:!1,originMarker:!1,originMarkerDim:null,originMarkerImg:null,pagination:!1,querystringParams:!1,selectedMarkerImg:null,selectedMarkerImgDim:null,sessionStorage:!1,slideMap:!0,sortBy:null,storeLimit:26,taxonomyFilters:null,visibleMarkersList:!1,xmlElement:"marker",addressID:"bh-sl-address",closeIcon:"bh-sl-close-icon",formContainer:"bh-sl-form-container",formID:"bh-sl-user-location",geocodeID:null,lengthSwapID:"bh-sl-length-swap",loadingContainer:"bh-sl-loading",locationList:"bh-sl-loc-list",mapID:"bh-sl-map",maxDistanceID:"bh-sl-maxdistance",modalContent:"bh-sl-modal-content",modalWindow:"bh-sl-modal-window",overlay:"bh-sl-overlay",regionID:"bh-sl-region",searchID:"bh-sl-search",sortID:"bh-sl-sort",taxonomyFiltersContainer:"bh-sl-filters-container",infowindowTemplatePath:"../needreplace/media/Project/ToyotaTheme/Common/js/plugins/storeLocator/templates/infowindow-description.html",listTemplatePath:"../needreplace/media/Project/ToyotaTheme/Common/js/plugins/storeLocator/templates/location-list-description.html",KMLinfowindowTemplatePath:"../needreplace/media/Project/ToyotaTheme/Common/js/plugins/storeLocator/templates/kml-infowindow-description.html",KMLlistTemplatePath:"../needreplace/media/Project/ToyotaTheme/Common/js/plugins/storeLocator/templates/kml-location-list-description.html",listTemplateID:null,infowindowTemplateID:null,callbackAutoGeoSuccess:null,callbackBeforeSend:null,callbackCloseDirections:null,callbackCreateMarker:null,callbackDirectionsRequest:null,callbackFilters:null,callbackFormVals:null,callbackGeocodeRestrictions:null,callbackJsonp:null,callbackListClick:null,callbackMapSet:null,callbackMarkerClick:null,callbackModalClose:null,callbackModalOpen:null,callbackModalReady:null,callbackNearestLoc:null,callbackNoResults:null,callbackNotify:null,callbackPageChange:null,callbackRegion:null,callbackSorting:null,callbackSuccess:null,addressErrorAlert:"Unable to find address",autoGeocodeErrorAlert:"Automatic location detection failed. Please fill in your address or zip code.",distanceErrorAlert:"Unfortunately, our closest location is more than ",kilometerLang:"kilometer",kilometersLang:"kilometers",mileLang:"mile",milesLang:"miles",noResultsTitle:"No results",noResultsDesc:"No locations were found with the given criteria. Please modify your selections or input.",nextPage:"Next &raquo;",prevPage:"&laquo; Prev"};$.extend(Plugin.prototype,{init:function(){var _this=this;if(this.writeDebug("init"),"km"===this.settings.lengthUnit?GeoCodeCalc.EarthRadius=6367:GeoCodeCalc.EarthRadius=3956,dataTypeRead="kml"===this.settings.dataType?"xml":this.settings.dataType,!0===this.settings.inlineDirections&&$("."+this.settings.locationList).prepend('<div class="bh-sl-directions-panel"></div>'),originalZoom=this.settings.mapSettings.zoom,Handlebars.registerHelper("niceURL",function(url){if(url)return url.replace("https://","").replace("http://","")}),null!==this.settings.taxonomyFilters&&this.taxonomyFiltering(),this.sorting(),!0===this.settings.modal&&(null!==this.settings.taxonomyFilters&&$("."+this.settings.taxonomyFiltersContainer).clone(!0,!0).prependTo($this),$this.wrap('<div class="'+this.settings.overlay+'"><div class="'+this.settings.modalWindow+'"><div class="'+this.settings.modalContent+'">'),$("."+this.settings.modalWindow).prepend('<div class="'+this.settings.closeIcon+'"></div>'),$("."+this.settings.overlay).hide()),!0===this.settings.autoComplete){var searchInput=document.getElementById(this.settings.addressID),autoPlaces=new google.maps.places.Autocomplete(searchInput,this.settings.autoCompleteOptions);!0===this.settings.autoComplete&&!0!==this.settings.autoCompleteDisableListener&&autoPlaces.addListener("place_changed",function(e){_this.processForm(e)})}this._loadTemplates()},destroy:function(){this.writeDebug("destroy"),this.reset();var $mapDiv=$("#"+this.settings.mapID);if(markers.length)for(var i=0;i<=markers.length;i++)google.maps.event.removeListener(markers[i]);$("."+this.settings.locationList+" ul").empty(),$mapDiv.hasClass("bh-sl-map-open")&&$mapDiv.empty().removeClass("bh-sl-map-open"),!0===this.settings.modal&&$(". "+this.settings.overlay).remove(),$mapDiv.attr("style",""),$this.hide(),$.removeData($this.get(0)),$(document).off(pluginName),$this.unbind()},reset:function(){if(this.writeDebug("reset"),locationset=[],featuredset=[],normalset=[],markers=[],firstRun=!1,$(document).off("click."+pluginName,"."+this.settings.locationList+" li"),$("."+this.settings.locationList+" .bh-sl-close-directions-container").length&&$(".bh-sl-close-directions-container").remove(),!0===this.settings.inlineDirections){var $adp=$("."+this.settings.locationList+" .adp");$adp.length>0&&($adp.remove(),$("."+this.settings.locationList+" ul").fadeIn()),$(document).off("click","."+this.settings.locationList+" li .loc-directions a")}!0===this.settings.pagination&&$(document).off("click."+pluginName,".bh-sl-pagination li")},formFiltersReset:function(){if(this.writeDebug("formFiltersReset"),null!==this.settings.taxonomyFilters){var $inputs=$("."+this.settings.taxonomyFiltersContainer+" input"),$selects=$("."+this.settings.taxonomyFiltersContainer+" select");"object"==typeof $inputs&&($inputs.each(function(){($(this).is('input[type="checkbox"]')||$(this).is('input[type="radio"]'))&&$(this).prop("checked",!1)}),$selects.each(function(){$(this).prop("selectedIndex",0)}))}},mapReload:function(){this.writeDebug("mapReload"),this.reset(),null!==this.settings.taxonomyFilters&&(this.formFiltersReset(),this.taxonomyFiltersInit()),olat&&olng?(this.settings.mapSettings.zoom=originalZoom,this.processForm()):this.mapping(mappingObj)},notify:function(notifyText){this.writeDebug("notify",notifyText),this.settings.callbackNotify&&this.settings.callbackNotify.call(this,notifyText)},geoCodeCalcToRadian:function(v){return this.writeDebug("geoCodeCalcToRadian",v),v*(Math.PI/180)},geoCodeCalcDiffRadian:function(v1,v2){return this.writeDebug("geoCodeCalcDiffRadian",arguments),this.geoCodeCalcToRadian(v2)-this.geoCodeCalcToRadian(v1)},geoCodeCalcCalcDistance:function(lat1,lng1,lat2,lng2,radius){return this.writeDebug("geoCodeCalcCalcDistance",arguments),2*radius*Math.asin(Math.min(1,Math.sqrt(Math.pow(Math.sin(this.geoCodeCalcDiffRadian(lat1,lat2)/2),2)+Math.cos(this.geoCodeCalcToRadian(lat1))*Math.cos(this.geoCodeCalcToRadian(lat2))*Math.pow(Math.sin(this.geoCodeCalcDiffRadian(lng1,lng2)/2),2))))},getQueryString:function(param){if(this.writeDebug("getQueryString",param),param){param=param.replace(/[\[]/,"\\[").replace(/[\]]/,"\\]");var regex=new RegExp("[\\?&]"+param+"=([^&#]*)"),results=regex.exec(location.search);return null===results?"":decodeURIComponent(results[1].replace(/\+/g," "))}},getMap:function(){return this.map},_loadTemplates:function(){this.writeDebug("_loadTemplates");var source,_this=this,templateError='<div class="bh-sl-error">Error: Could not load plugin templates. Check the paths and ensure they have been uploaded. Paths will be wrong if you do not run this from a web server.</div>';"kml"===this.settings.dataType&&null===this.settings.listTemplateID&&null===this.settings.infowindowTemplateID?$.when($.get(this.settings.KMLinfowindowTemplatePath,function(template){source=template,infowindowTemplate=Handlebars.compile(source)}),$.get(this.settings.KMLlistTemplatePath,function(template){source=template,listTemplate=Handlebars.compile(source)})).then(function(){_this.locator()},function(){throw $("."+_this.settings.formContainer).append(templateError),new Error("Could not load storeLocator plugin templates")}):null!==this.settings.listTemplateID&&null!==this.settings.infowindowTemplateID?(infowindowTemplate=Handlebars.compile($("#"+this.settings.infowindowTemplateID).html()),listTemplate=Handlebars.compile($("#"+this.settings.listTemplateID).html()),_this.locator()):$.when($.get(this.settings.infowindowTemplatePath,function(template){source=template,infowindowTemplate=Handlebars.compile(source)}),$.get(this.settings.listTemplatePath,function(template){source=template,listTemplate=Handlebars.compile(source)})).then(function(){_this.locator()},function(){throw $("."+_this.settings.formContainer).append(templateError),new Error("Could not load storeLocator plugin templates")})},locator:function(){this.writeDebug("locator"),!0===this.settings.slideMap&&$this.hide(),this._start(),this._formEventHandler()},_formEventHandler:function(){this.writeDebug("_formEventHandler");var _this=this;!0===this.settings.noForm?($(document).on("click."+pluginName,"."+this.settings.formContainer+" button",function(e){_this.processForm(e)}),$(document).on("keydown."+pluginName,function(e){13===e.keyCode&&$("#"+_this.settings.addressID).is(":focus")&&_this.processForm(e)})):$(document).on("submit."+pluginName,"#"+this.settings.formID,function(e){_this.processForm(e)}),$(".bh-sl-reset").length&&$("#"+this.settings.mapID).length&&$(document).on("click."+pluginName,".bh-sl-reset",function(){_this.mapReload()})},_getData:function(lat,lng,address,geocodeData){this.writeDebug("_getData",arguments);var _this=this,northEast="",southWest="",formattedAddress="";if(void 0!==geocodeData&&void 0!==geocodeData.geometry.bounds&&(formattedAddress=geocodeData.formatted_address,northEast=JSON.stringify(geocodeData.geometry.bounds.getNorthEast()),southWest=JSON.stringify(geocodeData.geometry.bounds.getSouthWest())),this.settings.callbackBeforeSend&&this.settings.callbackBeforeSend.call(this,lat,lng,address,formattedAddress,northEast,southWest),null===_this.settings.dataRaw){var d=$.Deferred();!0===this.settings.loading&&$("."+this.settings.formContainer).append('<div class="'+this.settings.loadingContainer+'"></div>');var ajaxData={origLat:lat,origLng:lng,origAddress:address,formattedAddress:formattedAddress,boundsNorthEast:northEast,boundsSouthWest:southWest};return null!==this.settings.ajaxData&&"object"==typeof this.settings.ajaxData&&$.extend(ajaxData,this.settings.ajaxData),$.ajax({type:"GET",url:this.settings.dataLocation+("jsonp"===this.settings.dataType?(this.settings.dataLocation.match(/\?/)?"&":"?")+"callback=?":""),data:ajaxData,dataType:dataTypeRead,jsonpCallback:"jsonp"===this.settings.dataType?this.settings.callbackJsonp:null}).done(function(p){d.resolve(p),!0===_this.settings.loading&&$("."+_this.settings.formContainer+" ."+_this.settings.loadingContainer).remove()}).fail(d.reject),d.promise()}return"xml"===dataTypeRead?$.parseXML(_this.settings.dataRaw):"json"===dataTypeRead?Array.isArray&&Array.isArray(_this.settings.dataRaw)?_this.settings.dataRaw:"string"==typeof _this.settings.dataRaw?$.parseJSON(_this.settings.dataRaw):[]:void 0},_start:function(){this.writeDebug("_start");var latlng,_this=this,doAutoGeo=this.settings.autoGeocode;if(!1!==_this.settings.fullMapStartBlank){$("#"+_this.settings.mapID).addClass("bh-sl-map-open");var myOptions=_this.settings.mapSettings;myOptions.zoom=_this.settings.fullMapStartBlank,latlng=new google.maps.LatLng(this.settings.defaultLat,this.settings.defaultLng),myOptions.center=latlng,_this.map=new google.maps.Map(document.getElementById(_this.settings.mapID),myOptions),google.maps.event.addDomListener(window,"resize",function(){var center=_this.map.getCenter();google.maps.event.trigger(_this.map,"resize"),_this.map.setCenter(center)}),_this.settings.fullMapStartBlank=!1,myOptions.zoom=originalZoom}else!0===this.settings.defaultLoc&&this.defaultLocation(),""!==$.trim($("#"+this.settings.addressID).val())?(_this.writeDebug("Using Address Field"),_this.processForm(null),doAutoGeo=!1):!0===this.settings.fullMapStart&&(!0===this.settings.querystringParams&&this.getQueryString(this.settings.addressID)||!0===this.settings.querystringParams&&this.getQueryString(this.settings.searchID)||!0===this.settings.querystringParams&&this.getQueryString(this.settings.maxDistanceID)?(_this.writeDebug("Using Query String"),this.processForm(null),doAutoGeo=!1):this.mapping(null));!0===this.settings.autoGeocode&&!0===doAutoGeo&&(_this.writeDebug("Auto Geo"),_this.htmlGeocode()),null!==this.settings.autoGeocode&&(_this.writeDebug("Button Geo"),$(document).on("click."+pluginName,"#"+this.settings.geocodeID,function(){_this.htmlGeocode()}))},htmlGeocode:function(){this.writeDebug("htmlGeocode",arguments);var _this=this;if(!0===_this.settings.sessionStorage&&window.sessionStorage&&window.sessionStorage.getItem("myGeo"))return _this.writeDebug("Using Session Saved Values for GEO"),_this.autoGeocodeQuery(JSON.parse(window.sessionStorage.getItem("myGeo"))),!1;navigator.geolocation&&navigator.geolocation.getCurrentPosition(function(position){_this.writeDebug("Current Position Result");var pos={coords:{latitude:position.coords.latitude,longitude:position.coords.longitude,accuracy:position.coords.accuracy}};!0===_this.settings.sessionStorage&&window.sessionStorage&&window.sessionStorage.setItem("myGeo",JSON.stringify(pos)),_this.settings.callbackAutoGeoSuccess&&_this.settings.callbackAutoGeoSuccess.call(this,pos),_this.autoGeocodeQuery(pos)},function(error){_this._autoGeocodeError(error)})},googleGeocode:function(thisObj){thisObj.writeDebug("googleGeocode",arguments);var geocoder=new google.maps.Geocoder;this.geocode=function(request,callbackFunction){geocoder.geocode(request,function(results,status){if(status!==google.maps.GeocoderStatus.OK)throw callbackFunction(null),new Error("Geocode was not successful for the following reason: "+status);var result={};result.latitude=results[0].geometry.location.lat(),result.longitude=results[0].geometry.location.lng(),result.geocodeResult=results[0],callbackFunction(result)})}},reverseGoogleGeocode:function(thisObj){thisObj.writeDebug("reverseGoogleGeocode",arguments);var geocoder=new google.maps.Geocoder;this.geocode=function(request,callbackFunction){geocoder.geocode(request,function(results,status){if(status!==google.maps.GeocoderStatus.OK)throw callbackFunction(null),new Error("Reverse geocode was not successful for the following reason: "+status);if(results[0]){var result={};result.address=results[0].formatted_address,callbackFunction(result)}})}},roundNumber:function(num,dec){return this.writeDebug("roundNumber",arguments),Math.round(num*Math.pow(10,dec))/Math.pow(10,dec)},isEmptyObject:function(obj){this.writeDebug("isEmptyObject",arguments);for(var key in obj)if(obj.hasOwnProperty(key))return!1;return!0},hasEmptyObjectVals:function(obj){this.writeDebug("hasEmptyObjectVals",arguments);var objTest=!0;for(var key in obj)obj.hasOwnProperty(key)&&""!==obj[key]&&0!==obj[key].length&&(objTest=!1);return objTest},modalClose:function(){this.writeDebug("modalClose"),this.settings.callbackModalClose&&this.settings.callbackModalClose.call(this),filters={},$("."+this.settings.overlay+" select").prop("selectedIndex",0),$("."+this.settings.overlay+" input").prop("checked",!1),$("."+this.settings.overlay).hide()},_createLocationVariables:function(loopcount){this.writeDebug("_createLocationVariables",arguments);var value;locationData={};for(var key in locationset[loopcount])locationset[loopcount].hasOwnProperty(key)&&(value=locationset[loopcount][key],"distance"!==key&&"altdistance"!==key||(value=this.roundNumber(value,2)),locationData[key]=value)},sortAlpha:function(locationsarray){this.writeDebug("sortAlpha",arguments);var property=this.settings.sortBy.hasOwnProperty("prop")&&void 0!==this.settings.sortBy.prop?this.settings.sortBy.prop:"name";this.settings.sortBy.hasOwnProperty("order")&&"desc"===this.settings.sortBy.order.toString()?locationsarray.sort(function(a,b){return b[property].toLowerCase().localeCompare(a[property].toLowerCase())}):locationsarray.sort(function(a,b){return a[property].toLowerCase().localeCompare(b[property].toLowerCase())})},sortDate:function(locationsarray){this.writeDebug("sortDate",arguments);var property=this.settings.sortBy.hasOwnProperty("prop")&&void 0!==this.settings.sortBy.prop?this.settings.sortBy.prop:"date";this.settings.sortBy.hasOwnProperty("order")&&"desc"===this.settings.sortBy.order.toString()?locationsarray.sort(function(a,b){return new Date(b[property]).getTime()-new Date(a[property]).getTime()}):locationsarray.sort(function(a,b){return new Date(a[property]).getTime()-new Date(b[property]).getTime()})},sortNumerically:function(locationsarray){this.writeDebug("sortNumerically",arguments);var property=null!==this.settings.sortBy&&this.settings.sortBy.hasOwnProperty("prop")&&void 0!==this.settings.sortBy.prop?this.settings.sortBy.prop:"distance";null!==this.settings.sortBy&&this.settings.sortBy.hasOwnProperty("order")&&"desc"===this.settings.sortBy.order.toString()?locationsarray.sort(function(a,b){return b[property]<a[property]?-1:b[property]>a[property]?1:0}):locationsarray.sort(function(a,b){return a[property]<b[property]?-1:a[property]>b[property]?1:0})},sortCustom:function(locationsarray){this.writeDebug("sortCustom",arguments),this.settings.sortBy.hasOwnProperty("method")&&"alpha"===this.settings.sortBy.method.toString()?this.sortAlpha(locationsarray):this.settings.sortBy.hasOwnProperty("method")&&"date"===this.settings.sortBy.method.toString()?this.sortDate(locationsarray):this.sortNumerically(locationsarray)},filterData:function(data,filters){this.writeDebug("filterData",arguments);var filterTest=!0;for(var k in filters)if(filters.hasOwnProperty(k))if(!0===this.settings.exclusiveFiltering||null!==this.settings.exclusiveTax&&Array.isArray(this.settings.exclusiveTax)&&-1!==this.settings.exclusiveTax.indexOf(k)){var filterTests=filters[k],exclusiveTest=[];if(void 0!==data[k])for(var l=0;l<filterTests.length;l++)exclusiveTest[l]=new RegExp(filterTests[l],"i").test(data[k].replace(/([^\x00-\x7F]|[.*+?^=!:${}()|\[\]\/\\]|&\s+)/g,""));-1===exclusiveTest.indexOf(!0)&&(filterTest=!1)}else void 0!==data[k]&&new RegExp(filters[k].join(""),"i").test(data[k].replace(/([^\x00-\x7F]|[.*+?^=!:${}()|\[\]\/\\]|&\s+)/g,""))||(filterTest=!1);if(filterTest)return!0},_paginationOutput:function(currentPage,totalPages){this.writeDebug("_paginationOutput",arguments),currentPage=parseFloat(currentPage);var output="",nextPage=currentPage+1,prevPage=currentPage-1;currentPage>0&&(output+='<li class="bh-sl-next-prev" data-page="'+prevPage+'">'+this.settings.prevPage+"</li>");for(var p=0;p<Math.ceil(totalPages);p++){var n=p+1;output+=p===currentPage?'<li class="bh-sl-current" data-page="'+p+'">'+n+"</li>":'<li data-page="'+p+'">'+n+"</li>"}return nextPage<totalPages&&(output+='<li class="bh-sl-next-prev" data-page="'+nextPage+'">'+this.settings.nextPage+"</li>"),output},paginationSetup:function(currentPage){this.writeDebug("paginationSetup",arguments);var totalPages,pagesOutput="",$paginationList=$(".bh-sl-pagination-container .bh-sl-pagination");totalPages=-1===this.settings.storeLimit||locationset.length<this.settings.storeLimit?locationset.length/this.settings.locationsPerPage:this.settings.storeLimit/this.settings.locationsPerPage,void 0===currentPage&&(currentPage=0),0===$paginationList.length?pagesOutput=this._paginationOutput(currentPage,totalPages):($paginationList.empty(),pagesOutput=this._paginationOutput(currentPage,totalPages)),$paginationList.append(pagesOutput)},markerImage:function(markerUrl,markerWidth,markerHeight){this.writeDebug("markerImage",arguments);return void 0!==markerWidth&&void 0!==markerHeight?{url:markerUrl,size:new google.maps.Size(markerWidth,markerHeight),scaledSize:new google.maps.Size(markerWidth,markerHeight)}:{url:markerUrl,size:new google.maps.Size(34,51),scaledSize:new google.maps.Size(34,51)}},createMarker:function(point,name,address,letter,map,category){this.writeDebug("createMarker",arguments);var marker,markerImg,letterMarkerImg,categories=[];if(null!==this.settings.catMarkers&&void 0!==category)if(-1!==category.indexOf(",")){categories=category.split(",");for(var i=0;i<categories.length;i++)categories[i]in this.settings.catMarkers&&(markerImg=this.markerImage(this.settings.catMarkers[categories[i]][0],parseInt(this.settings.catMarkers[categories[i]][1]),parseInt(this.settings.catMarkers[categories[i]][2])))}else category in this.settings.catMarkers&&(markerImg=this.markerImage(this.settings.catMarkers[category][0],parseInt(this.settings.catMarkers[category][1]),parseInt(this.settings.catMarkers[category][2])));return null!==this.settings.markerImg&&(markerImg=null===this.settings.markerDim?this.markerImage(this.settings.markerImg):this.markerImage(this.settings.markerImg,this.settings.markerDim.width,this.settings.markerDim.height)),this.settings.callbackCreateMarker?marker=this.settings.callbackCreateMarker.call(this,map,point,letter,category):!0===this.settings.disableAlphaMarkers||-1===this.settings.storeLimit||this.settings.storeLimit>26||null!==this.settings.catMarkers||null!==this.settings.markerImg||!0===this.settings.fullMapStart&&!0===firstRun&&(isNaN(this.settings.fullMapStartListLimit)||this.settings.fullMapStartListLimit>26||-1===this.settings.fullMapStartListLimit)?marker=new google.maps.Marker({position:point,map:map,draggable:!1,icon:markerImg}):(letterMarkerImg={url:"https://mt.googleapis.com/vt/icon/name=icons/spotlight/spotlight-waypoint-b.png&text="+letter+"&psize=16&font=fonts/Roboto-Regular.ttf&color=ff333333&ax=44&ay=48"},marker=new google.maps.Marker({position:point,map:map,icon:letterMarkerImg,draggable:!1})),marker},_defineLocationData:function(currentMarker,storeStart,page){this.writeDebug("_defineLocationData",arguments);var indicator="";this._createLocationVariables(currentMarker.get("id"));var altDistLength,distLength;locationData.distance<=1?"km"===this.settings.lengthUnit?(distLength=this.settings.kilometerLang,altDistLength=this.settings.mileLang):(distLength=this.settings.mileLang,altDistLength=this.settings.kilometerLang):"km"===this.settings.lengthUnit?(distLength=this.settings.kilometersLang,altDistLength=this.settings.milesLang):(distLength=this.settings.milesLang,altDistLength=this.settings.kilometersLang);var markerId=currentMarker.get("id");return indicator=!0===this.settings.disableAlphaMarkers||-1===this.settings.storeLimit||this.settings.storeLimit>26||!0===this.settings.fullMapStart&&!0===firstRun&&(isNaN(this.settings.fullMapStartListLimit)||this.settings.fullMapStartListLimit>26||-1===this.settings.fullMapStartListLimit)?markerId+1:page>0?String.fromCharCode("A".charCodeAt(0)+(storeStart+markerId)):String.fromCharCode("A".charCodeAt(0)+markerId),{location:[$.extend(locationData,{markerid:markerId,marker:indicator,altlength:altDistLength,length:distLength,origin:originalOrigin})]}},listSetup:function(marker,storeStart,page){this.writeDebug("listSetup",arguments);var locations=this._defineLocationData(marker,storeStart,page),listHtml=listTemplate(locations);$("."+this.settings.locationList+" > ul").append(listHtml)},changeSelectedMarker:function(marker){var markerImg;void 0!==prevSelectedMarkerAfter&&prevSelectedMarkerAfter.setIcon(prevSelectedMarkerBefore),markerImg=null===this.settings.selectedMarkerImgDim?this.markerImage(this.settings.selectedMarkerImg):this.markerImage(this.settings.selectedMarkerImg,this.settings.selectedMarkerImgDim.width,this.settings.selectedMarkerImgDim.height),prevSelectedMarkerBefore=marker.icon,marker.setIcon(markerImg),prevSelectedMarkerAfter=marker},createInfowindow:function(marker,location,infowindow,storeStart,page){this.writeDebug("createInfowindow",arguments);var _this=this,locations=this._defineLocationData(marker,storeStart,page),formattedAddress=infowindowTemplate(locations);"left"===location?(infowindow.setContent(formattedAddress),infowindow.open(marker.get("map"),marker)):google.maps.event.addListener(marker,"click",function(){var markerId=marker.get("id"),$selectedLocation=$("."+_this.settings.locationList+" li[data-markerid="+markerId+"]");if($selectedLocation.length>0){_this.settings.callbackMarkerClick&&_this.settings.callbackMarkerClick.call(this,marker,markerId,$selectedLocation,locationset[markerId]),$("."+_this.settings.locationList+" li").removeClass("list-focus"),$selectedLocation.addClass("list-focus");var $container=$("."+_this.settings.locationList);$container.animate({scrollTop:$selectedLocation.offset().top-$container.offset().top+$container.scrollTop()})}null!==_this.settings.selectedMarkerImg&&_this.changeSelectedMarker(marker)})},autoGeocodeQuery:function(position){this.writeDebug("autoGeocodeQuery",arguments);var originAddress,_this=this,distance=null,$distanceInput=$("#"+this.settings.maxDistanceID);!0===this.settings.querystringParams&&this.getQueryString(this.settings.maxDistanceID)?(distance=this.getQueryString(this.settings.maxDistanceID),""!==$distanceInput.val()&&(distance=$distanceInput.val())):!0===this.settings.maxDistance&&(distance=$distanceInput.val()||"");var r=new this.reverseGoogleGeocode(this),latlng=new google.maps.LatLng(position.coords.latitude,position.coords.longitude);r.geocode({latLng:latlng},function(data){null!==data?(originAddress=addressInput=data.address,olat=mappingObj.lat=position.coords.latitude,olng=mappingObj.lng=position.coords.longitude,mappingObj.origin=originAddress,mappingObj.distance=distance,_this.mapping(mappingObj)):_this.notify(_this.settings.addressErrorAlert)})},_autoGeocodeError:function(){this.writeDebug("_autoGeocodeError"),this.notify(this.settings.autoGeocodeErrorAlert)},defaultLocation:function(){this.writeDebug("defaultLocation");var originAddress,_this=this,distance=null,$distanceInput=$("#"+this.settings.maxDistanceID);!0===this.settings.querystringParams&&this.getQueryString(this.settings.maxDistanceID)?(distance=this.getQueryString(this.settings.maxDistanceID),""!==$distanceInput.val()&&(distance=$distanceInput.val())):!0===this.settings.maxDistance&&(distance=$distanceInput.val()||"");var r=new this.reverseGoogleGeocode(this),latlng=new google.maps.LatLng(this.settings.defaultLat,this.settings.defaultLng);r.geocode({latLng:latlng},function(data){null!==data?(originAddress=addressInput=data.address,olat=mappingObj.lat=_this.settings.defaultLat,olng=mappingObj.lng=_this.settings.defaultLng,mappingObj.distance=distance,mappingObj.origin=originAddress,_this.mapping(mappingObj)):_this.notify(_this.settings.addressErrorAlert)})},paginationChange:function(newPage){this.writeDebug("paginationChange",arguments),this.settings.callbackPageChange&&this.settings.callbackPageChange.call(this,newPage),mappingObj.page=newPage,this.mapping(mappingObj)},getAddressByMarker:function(markerID){this.writeDebug("getAddressByMarker",arguments);var formattedAddress="";return locationset[markerID].address&&(formattedAddress+=locationset[markerID].address+" "),locationset[markerID].address2&&(formattedAddress+=locationset[markerID].address2+" "),locationset[markerID].city&&(formattedAddress+=locationset[markerID].city+", "),locationset[markerID].state&&(formattedAddress+=locationset[markerID].state+" "),locationset[markerID].postal&&(formattedAddress+=locationset[markerID].postal+" "),locationset[markerID].country&&(formattedAddress+=locationset[markerID].country+" "),formattedAddress},clearMarkers:function(){this.writeDebug("clearMarkers");var locationsLimit=null;locationsLimit=locationset.length<this.settings.storeLimit?locationset.length:this.settings.storeLimit;for(var i=0;i<locationsLimit;i++)markers[i].setMap(null)},directionsRequest:function(origin,locID,map){this.writeDebug("directionsRequest",arguments),this.settings.callbackDirectionsRequest&&this.settings.callbackDirectionsRequest.call(this,origin,locID,map,locationset[locID]);var destination=this.getAddressByMarker(locID);if(destination){$("."+this.settings.locationList+" ul").hide(),this.clearMarkers(),null!==directionsDisplay&&void 0!==directionsDisplay&&(directionsDisplay.setMap(null),directionsDisplay=null),directionsDisplay=new google.maps.DirectionsRenderer,directionsService=new google.maps.DirectionsService,directionsDisplay.setMap(map),directionsDisplay.setPanel($(".bh-sl-directions-panel").get(0));var request={origin:origin,destination:destination,travelMode:google.maps.TravelMode.DRIVING};directionsService.route(request,function(response,status){status===google.maps.DirectionsStatus.OK&&directionsDisplay.setDirections(response)}),$("."+this.settings.locationList).prepend('<div class="bh-sl-close-directions-container"><div class="'+this.settings.closeIcon+'"></div></div>')}$(document).off("click","."+this.settings.locationList+" li .loc-directions a")},closeDirections:function(){this.writeDebug("closeDirections"),this.settings.callbackCloseDirections&&this.settings.callbackCloseDirections.call(this),this.reset(),olat&&olng&&(0===this.countFilters()?this.settings.mapSettings.zoom=originalZoom:this.settings.mapSettings.zoom=0,this.processForm(null)),$(document).off("click."+pluginName,"."+this.settings.locationList+" .bh-sl-close-icon")},lengthUnitSwap:function($lengthSwap){this.writeDebug("lengthUnitSwap",arguments),"alt-distance"===$lengthSwap.val()?($("."+this.settings.locationList+" .loc-alt-dist").show(),
$("."+this.settings.locationList+" .loc-default-dist").hide()):"default-distance"===$lengthSwap.val()&&($("."+this.settings.locationList+" .loc-default-dist").show(),$("."+this.settings.locationList+" .loc-alt-dist").hide())},processForm:function(e){this.writeDebug("processForm",arguments);var _this=this,distance=null,geocodeRestrictions={},$addressInput=$("#"+this.settings.addressID),$searchInput=$("#"+this.settings.searchID),$distanceInput=$("#"+this.settings.maxDistanceID),region="";if(void 0!==e&&null!==e&&e.preventDefault(),$("."+_this.settings.formContainer+" input, ."+_this.settings.formContainer+" select").blur(),!0===this.settings.querystringParams&&(this.getQueryString(this.settings.addressID)||this.getQueryString(this.settings.searchID)||this.getQueryString(this.settings.maxDistanceID))?(addressInput=this.getQueryString(this.settings.addressID),searchInput=this.getQueryString(this.settings.searchID),distance=this.getQueryString(this.settings.maxDistanceID),""!==$addressInput.val()&&(addressInput=$addressInput.val()),""!==$searchInput.val()&&(searchInput=$searchInput.val()),""!==$distanceInput.val()&&(distance=$distanceInput.val())):(addressInput=$addressInput.val()||"",searchInput=$searchInput.val()||"",!0===this.settings.maxDistance&&(distance=$distanceInput.val()||"")),region=this.settings.callbackRegion?this.settings.callbackRegion.call(this,addressInput,searchInput,distance):$("#"+this.settings.regionID).val(),this.settings.callbackFormVals&&this.settings.callbackFormVals.call(this,addressInput,searchInput,distance,region),void 0!==region&&(geocodeRestrictions={country:region}),"function"==typeof this.settings.callbackGeocodeRestrictions&&(geocodeRestrictions=this.settings.callbackGeocodeRestrictions.call(this,addressInput,searchInput,distance)),""===addressInput&&""===searchInput&&!0!==this.settings.autoGeocode)this._start();else if(""!==addressInput)if(void 0!==originalOrigin&&void 0!==olat&&void 0!==olng&&addressInput===originalOrigin)mappingObj.lat=olat,mappingObj.lng=olng,mappingObj.origin=addressInput,mappingObj.name=searchInput,mappingObj.distance=distance,_this.mapping(mappingObj);else{var g=new this.googleGeocode(this);g.geocode({address:addressInput,componentRestrictions:geocodeRestrictions,region:region},function(data){null!==data?(olat=data.latitude,olng=data.longitude,mappingObj.lat=olat,mappingObj.lng=olng,mappingObj.origin=addressInput,mappingObj.name=searchInput,mappingObj.distance=distance,mappingObj.geocodeResult=data.geocodeResult,_this.mapping(mappingObj)):_this.notify(_this.settings.addressErrorAlert)})}else""!==searchInput?(""===addressInput&&delete mappingObj.origin,mappingObj.name=searchInput,_this.mapping(mappingObj)):!0===this.settings.autoGeocode&&(mappingObj.lat=olat,mappingObj.lng=olng,mappingObj.origin=addressInput,mappingObj.name=searchInput,mappingObj.distance=distance,_this.mapping(mappingObj))},locationsSetup:function(data,lat,lng,origin,maxDistance){this.writeDebug("locationsSetup",arguments),void 0!==origin&&(data.distance||(data.distance=this.geoCodeCalcCalcDistance(lat,lng,data.lat,data.lng,GeoCodeCalc.EarthRadius),"m"===this.settings.lengthUnit?data.altdistance=1.609344*parseFloat(data.distance):"km"===this.settings.lengthUnit&&(data.altdistance=parseFloat(data.distance)/1.609344))),!0===this.settings.maxDistance&&void 0!==maxDistance&&null!==maxDistance?data.distance<=maxDistance&&locationset.push(data):!0===this.settings.maxDistance&&!0===this.settings.querystringParams&&void 0!==maxDistance&&null!==maxDistance?data.distance<=maxDistance&&locationset.push(data):locationset.push(data)},sorting:function(){this.writeDebug("sorting",arguments);var _this=this,$mapDiv=$("#"+_this.settings.mapID),$sortSelect=$("#"+_this.settings.sortID);0!==$sortSelect.length&&$sortSelect.on("change."+pluginName,function(e){e.stopPropagation(),!0===_this.settings.pagination&&_this.paginationChange(0);var sortMethod,sortVal;sortMethod=void 0!==$(this).find(":selected").attr("data-method")?$(this).find(":selected").attr("data-method"):"distance",sortVal=$(this).val(),_this.settings.sortBy.method=sortMethod,_this.settings.sortBy.prop=sortVal,_this.settings.callbackSorting&&_this.settings.callbackSorting.call(this,_this.settings.sortBy),$mapDiv.hasClass("bh-sl-map-open")&&_this.mapping(mappingObj)})},countFilters:function(){this.writeDebug("countFilters");var filterCount=0;if(!this.isEmptyObject(filters))for(var key in filters)filters.hasOwnProperty(key)&&(filterCount+=filters[key].length);return filterCount},_existingCheckedFilters:function(key){this.writeDebug("_existingCheckedFilters",arguments),$("#"+this.settings.taxonomyFilters[key]+" input[type=checkbox]").each(function(){if($(this).prop("checked")){var filterVal=$(this).val();void 0!==filterVal&&""!==filterVal&&-1===filters[key].indexOf(filterVal)&&filters[key].push(filterVal)}})},_existingSelectedFilters:function(key){this.writeDebug("_existingSelectedFilters",arguments),$("#"+this.settings.taxonomyFilters[key]+" select").each(function(){var filterVal=$(this).val();void 0!==filterVal&&""!==filterVal&&-1===filters[key].indexOf(filterVal)&&(filters[key]=[filterVal])})},_existingRadioFilters:function(key){this.writeDebug("_existingRadioFilters",arguments),$("#"+this.settings.taxonomyFilters[key]+" input[type=radio]").each(function(){if($(this).prop("checked")){var filterVal=$(this).val();void 0!==filterVal&&""!==filterVal&&-1===filters[key].indexOf(filterVal)&&(filters[key]=[filterVal])}})},checkFilters:function(){this.writeDebug("checkFilters");for(var key in this.settings.taxonomyFilters)this.settings.taxonomyFilters.hasOwnProperty(key)&&(this._existingCheckedFilters(key),this._existingSelectedFilters(key),this._existingRadioFilters(key))},selectQueryStringFilters:function(taxonomy,value){this.writeDebug("selectQueryStringFilters",arguments);var $taxGroupContainer=$("#"+this.settings.taxonomyFilters[taxonomy]);if($taxGroupContainer.find('input[type="checkbox"]').length)for(var i=0;i<value.length;i++)$taxGroupContainer.find('input:checkbox[value="'+value[i]+'"]').prop("checked",!0);$taxGroupContainer.find("select").length&&$taxGroupContainer.find('option[value="'+value[0]+'"]').prop("selected",!0),$taxGroupContainer.find('input[type="radio"]').length&&$taxGroupContainer.find('input:radio[value="'+value[0]+'"]').prop("checked",!0)},checkQueryStringFilters:function(){this.writeDebug("checkQueryStringFilters",arguments);for(var key in filters)if(filters.hasOwnProperty(key)){var filterVal=this.getQueryString(key);-1!==filterVal.indexOf(",")&&(filterVal=filterVal.split(",")),void 0!==filterVal&&""!==filterVal&&-1===filters[key].indexOf(filterVal)&&(Array.isArray(filterVal)?filters[key]=filterVal:filters[key]=[filterVal]),filters[key].length&&this.selectQueryStringFilters(key,filters[key])}},getFilterKey:function(filterContainer){this.writeDebug("getFilterKey",arguments);for(var key in this.settings.taxonomyFilters)if(this.settings.taxonomyFilters.hasOwnProperty(key))for(var i=0;i<this.settings.taxonomyFilters[key].length;i++)if(this.settings.taxonomyFilters[key]===filterContainer)return key},taxonomyFiltersInit:function(){this.writeDebug("taxonomyFiltersInit");for(var key in this.settings.taxonomyFilters)this.settings.taxonomyFilters.hasOwnProperty(key)&&(filters[key]=[])},taxonomyFiltering:function(){this.writeDebug("taxonomyFiltering");var _this=this;_this.taxonomyFiltersInit(),_this.checkQueryStringFilters(),$("."+this.settings.taxonomyFiltersContainer).on("change."+pluginName,"input, select",function(e){e.stopPropagation();var filterVal,filterContainer,filterKey;if(!0===_this.settings.pagination&&_this.paginationChange(0),$(this).is('input[type="checkbox"]')){if(_this.checkFilters(),filterVal=$(this).val(),filterContainer=$(this).closest(".bh-sl-filters").attr("id"),filterKey=_this.getFilterKey(filterContainer))if($(this).prop("checked"))-1===filters[filterKey].indexOf(filterVal)&&filters[filterKey].push(filterVal),!0===$("#"+_this.settings.mapID).hasClass("bh-sl-map-open")&&(olat&&olng?(_this.settings.mapSettings.zoom=0,_this.processForm()):_this.mapping(mappingObj));else{var filterIndex=filters[filterKey].indexOf(filterVal);filterIndex>-1&&(filters[filterKey].splice(filterIndex,1),!0===$("#"+_this.settings.mapID).hasClass("bh-sl-map-open")&&(olat&&olng?(0===_this.countFilters()?_this.settings.mapSettings.zoom=originalZoom:_this.settings.mapSettings.zoom=0,_this.processForm()):_this.mapping(mappingObj)))}}else($(this).is("select")||$(this).is('input[type="radio"]'))&&(_this.checkFilters(),filterVal=$(this).val(),filterContainer=$(this).closest(".bh-sl-filters").attr("id"),filterKey=_this.getFilterKey(filterContainer),filterVal?filterKey&&(filters[filterKey]=[filterVal],!0===$("#"+_this.settings.mapID).hasClass("bh-sl-map-open")&&(olat&&olng?(_this.settings.mapSettings.zoom=0,_this.processForm()):_this.mapping(mappingObj))):(filterKey&&(filters[filterKey]=[]),_this.reset(),olat&&olng?(_this.settings.mapSettings.zoom=originalZoom,_this.processForm()):_this.mapping(mappingObj)))})},checkVisibleMarkers:function(markers,map){this.writeDebug("checkVisibleMarkers",arguments);var listHtml,_this=this;$("."+this.settings.locationList+" ul").empty(),$(markers).each(function(x,marker){map.getBounds().contains(marker.getPosition())&&(_this.listSetup(marker,0,0),listHtml=listTemplate(void 0),$("."+_this.settings.locationList+" > ul").append(listHtml))}),$("."+this.settings.locationList+" ul li:even").css("background",this.settings.listColor1),$("."+this.settings.locationList+" ul li:odd").css("background",this.settings.listColor2)},dragSearch:function(map){this.writeDebug("dragSearch",arguments);var newCenterCoords,newCenter=map.getCenter(),_this=this;this.settings.mapSettings.zoom=map.getZoom(),olat=mappingObj.lat=newCenter.lat(),olng=mappingObj.lng=newCenter.lng();var newAddress=new this.reverseGoogleGeocode(this);newCenterCoords=new google.maps.LatLng(mappingObj.lat,mappingObj.lng),newAddress.geocode({latLng:newCenterCoords},function(data){null!==data?(mappingObj.origin=addressInput=data.address,_this.mapping(mappingObj)):_this.notify(_this.settings.addressErrorAlert)})},emptyResult:function(){this.writeDebug("emptyResult",arguments);var center,noResults,locList=$("."+this.settings.locationList+" ul"),myOptions=this.settings.mapSettings;this.map=new google.maps.Map(document.getElementById(this.settings.mapID),myOptions),this.settings.callbackNoResults&&this.settings.callbackNoResults.call(this,this.map,myOptions),locList.empty(),noResults=$('<li class="bh-no-result"><div class="bh-sl-noresults-title">'+this.settings.noResultsTitle+'</div><br><div class="bh-sl-noresults-desc">'+this.settings.noResultsDesc+"</li>").hide().fadeIn(),locList.append(noResults),center=olat&&olng?new google.maps.LatLng(olat,olng):new google.maps.LatLng(0,0),this.map.setCenter(center),originalZoom&&this.map.setZoom(originalZoom)},originMarker:function(map,origin,originPoint){if(this.writeDebug("originMarker",arguments),!0===this.settings.originMarker){var originImg="";void 0!==origin&&(originImg=null!==this.settings.originMarkerImg?null===this.settings.originMarkerDim?this.markerImage(this.settings.originMarkerImg):this.markerImage(this.settings.originMarkerImg,this.settings.originMarkerDim.width,this.settings.originMarkerDim.height):{url:"https://mt.googleapis.com/vt/icon/name=icons/spotlight/spotlight-waypoint-a.png"},new google.maps.Marker({position:originPoint,map:map,icon:originImg,draggable:!1}))}},modalWindow:function(){if(this.writeDebug("modalWindow"),!0===this.settings.modal){var _this=this;_this.settings.callbackModalOpen&&_this.settings.callbackModalOpen.call(this),$("."+_this.settings.overlay).fadeIn(),$(document).on("click."+pluginName,"."+_this.settings.closeIcon+", ."+_this.settings.overlay,function(){_this.modalClose()}),$(document).on("click."+pluginName,"."+_this.settings.modalWindow,function(e){e.stopPropagation()}),$(document).on("keyup."+pluginName,function(e){27===e.keyCode&&_this.modalClose()})}},openNearestLocation:function(nearestLoc,infowindow,storeStart,page){if(console.log("open nearest"),this.writeDebug("openNearestLocation",arguments),!(!0!==this.settings.openNearest||void 0===nearestLoc||!0===this.settings.fullMapStart&&!0===firstRun||!0===this.settings.defaultLoc&&!0===firstRun)){var _this=this;_this.settings.callbackNearestLoc&&_this.settings.callbackNearestLoc.call(this,_this.map,nearestLoc,infowindow,storeStart,page);var selectedMarker=markers[0];_this.createInfowindow(selectedMarker,"left",infowindow,storeStart,page);var $container=$("."+_this.settings.locationList),$selectedLocation=$("."+_this.settings.locationList+" li[data-markerid=0]");$("."+_this.settings.locationList+" li").removeClass("list-focus"),$selectedLocation.addClass("list-focus"),$container.animate({scrollTop:$selectedLocation.offset().top-$container.offset().top+$container.scrollTop()})}},listClick:function(map,infowindow,storeStart,page){this.writeDebug("listClick",arguments);var _this=this;$(document).on("click."+pluginName,"."+_this.settings.locationList+" li",function(){var markerId=$(this).data("markerid"),selectedMarker=markers[markerId];_this.settings.callbackListClick&&_this.settings.callbackListClick.call(this,markerId,selectedMarker,locationset[markerId]),map.panTo(selectedMarker.getPosition());!0===_this.settings.bounceMarker?(selectedMarker.setAnimation(google.maps.Animation.BOUNCE),setTimeout(function(){selectedMarker.setAnimation(null),_this.createInfowindow(selectedMarker,"left",infowindow,storeStart,page)},700)):_this.createInfowindow(selectedMarker,"left",infowindow,storeStart,page),null!==_this.settings.selectedMarkerImg&&_this.changeSelectedMarker(selectedMarker),$("."+_this.settings.locationList+" li").removeClass("list-focus"),$("."+_this.settings.locationList+" li[data-markerid="+markerId+"]").addClass("list-focus"),window.innerWidth<=990&&$(".accordion-mobile-header-controls").addClass("show");var $selectedLocation=$("."+_this.settings.locationList+" li[data-markerid="+markerId+"]");if($selectedLocation.length>0){_this.settings.callbackMarkerClick&&_this.settings.callbackMarkerClick.call(this,marker,markerId,$selectedLocation,locationset[markerId]);var myIndex=$selectedLocation.parent().children().index($selectedLocation),accordionStatus=localStorage.getItem("accordionStatus"),accordionNo=localStorage.getItem("accordionNo");window.innerWidth>=991&&(console.log(window.innerWidth),myIndex==accordionNo&&"true"===accordionStatus?(localStorage.setItem("accordionStatus","false"),$selectedLocation.removeClass("list-focus"),console.log("if")):myIndex!=accordionNo?(console.log("else if"),localStorage.setItem("accordionStatus","true"),localStorage.setItem("accordionNo",myIndex),$("."+_this.settings.locationList+" li").removeClass("list-focus"),$selectedLocation.addClass("list-focus")):(localStorage.setItem("accordionStatus","true"),localStorage.setItem("accordionNo",myIndex),console.log("else")));var $container=$("."+_this.settings.locationList);$container.animate({scrollTop:$selectedLocation.offset().top-$container.offset().top+$container.scrollTop()})}}),$(document).on("click."+pluginName,"."+_this.settings.locationList+" li a",function(e){e.stopPropagation()})},resultsTotalCount:function(locCount){this.writeDebug("resultsTotalCount",arguments);var $resultsContainer=$(".bh-sl-total-results");void 0===locCount||locCount<=0||0===$resultsContainer.length||$resultsContainer.text(locCount)},inlineDirections:function(map,origin){if(this.writeDebug("inlineDirections",arguments),!0===this.settings.inlineDirections&&void 0!==origin){var _this=this;$(document).on("click."+pluginName,"."+_this.settings.locationList+" li .loc-directions a",function(e){e.preventDefault();var locID=$(this).closest("li").attr("data-markerid");_this.directionsRequest(origin,parseInt(locID),map),$(document).on("click."+pluginName,"."+_this.settings.locationList+" .bh-sl-close-icon",function(){_this.closeDirections()})})}},visibleMarkersList:function(map,markers){if(this.writeDebug("visibleMarkersList",arguments),!0===this.settings.visibleMarkersList){var _this=this;google.maps.event.addListenerOnce(map,"idle",function(){_this.checkVisibleMarkers(markers,map)}),google.maps.event.addListener(map,"center_changed",function(){_this.checkVisibleMarkers(markers,map)}),google.maps.event.addListener(map,"zoom_changed",function(){_this.checkVisibleMarkers(markers,map)})}},mapping:function(mappingObject){this.writeDebug("mapping",arguments);var orig_lat,orig_lng,geocodeData,origin,originPoint,page,_this=this;this.isEmptyObject(mappingObject)||(orig_lat=mappingObject.lat,orig_lng=mappingObject.lng,geocodeData=mappingObject.geocodeResult,origin=mappingObject.origin,page=mappingObject.page),!0===_this.settings.pagination&&(void 0!==page&&originalOrigin===addressInput||(page=0)),void 0===origin&&!0===this.settings.nameSearch?dataRequest=_this._getData():(originPoint=new google.maps.LatLng(orig_lat,orig_lng),void 0!==originalOrigin&&origin===originalOrigin&&void 0!==originalData?(origin=originalOrigin,dataRequest=originalData):dataRequest=_this._getData(olat,olng,origin,geocodeData)),null!==_this.settings.taxonomyFilters&&_this.hasEmptyObjectVals(filters)&&_this.checkFilters(),null!==_this.settings.dataRaw?_this.processData(mappingObject,originPoint,dataRequest,page):dataRequest.done(function(data){_this.processData(mappingObject,originPoint,data,page)})},processData:function(mappingObject,originPoint,data,page){this.writeDebug("processData",arguments);var orig_lat,orig_lng,origin,maxDistance,marker,bounds,storeStart,storeNumToShow,myOptions,distError,openMap,infowindow,nearestLoc,_this=this,i=0,taxFilters={},$lengthSwap=$("#"+_this.settings.lengthSwapID);this.isEmptyObject(mappingObject)||(orig_lat=mappingObject.lat,orig_lng=mappingObject.lng,origin=mappingObject.origin,mappingObject.name,maxDistance=mappingObject.distance);var $mapDiv=$("#"+_this.settings.mapID),distUnit="km"===_this.settings.lengthUnit?_this.settings.kilometersLang:_this.settings.milesLang;if(originalData=dataRequest,void 0!==origin&&(originalOrigin=origin),_this.settings.callbackSuccess&&_this.settings.callbackSuccess.call(this,mappingObject,originPoint,data,page),openMap=$mapDiv.hasClass("bh-sl-map-open"),!0===_this.settings.fullMapStart&&!1===openMap||!0===_this.settings.autoGeocode&&!1===openMap||!0===_this.settings.defaultLoc&&!1===openMap?firstRun=!0:_this.reset(),$mapDiv.addClass("bh-sl-map-open"),"json"===_this.settings.dataType||"jsonp"===_this.settings.dataType)for(var x=0;i<data.length;x++){var obj=data[x],locationData={};for(var key in obj)obj.hasOwnProperty(key)&&(locationData[key]=obj[key]);_this.locationsSetup(locationData,orig_lat,orig_lng,origin,maxDistance),i++}else"kml"===_this.settings.dataType?$(data).find("Placemark").each(function(){var locationData={name:$(this).find("name").text(),lat:$(this).find("coordinates").text().split(",")[1],lng:$(this).find("coordinates").text().split(",")[0],description:$(this).find("description").text()};_this.locationsSetup(locationData,orig_lat,orig_lng,origin,maxDistance),i++}):$(data).find(_this.settings.xmlElement).each(function(){var locationData={};for(var key in this.attributes)this.attributes.hasOwnProperty(key)&&(locationData[this.attributes[key].name]=this.attributes[key].value);_this.locationsSetup(locationData,orig_lat,orig_lng,origin,maxDistance),i++});if(!0===_this.settings.nameSearch&&void 0!==searchInput&&(filters[_this.settings.nameAttribute]=[searchInput]),null!==_this.settings.taxonomyFilters||!0===_this.settings.nameSearch){for(var k in filters)if(filters.hasOwnProperty(k)&&filters[k].length>0)for(var z=0;z<filters[k].length;z++)taxFilters[k]||(taxFilters[k]=[]),taxFilters[k][z]="(?=.*\\b"+filters[k][z].replace(/([^\x00-\x7F]|[.*+?^=!:${}()|\[\]\/\\]|&\s+)/g,"")+"\\b)";_this.isEmptyObject(taxFilters)||(locationset=$.grep(locationset,function(val){return _this.filterData(val,taxFilters)}))}if(null!==_this.settings.sortBy&&"object"==typeof _this.settings.sortBy)_this.sortCustom(locationset);else{if(void 0!==origin&&_this.sortNumerically(locationset),_this.isEmptyObject(taxFilters))if(!0===_this.settings.maxDistance&&maxDistance)(void 0===locationset[0]||locationset[0].distance>maxDistance)&&_this.notify(_this.settings.distanceErrorAlert+maxDistance+" "+distUnit);else{if(void 0===locationset[0])throw new Error("No locations found. Please check the dataLocation setting and path.");-1!==_this.settings.distanceAlert&&locationset[0].distance>_this.settings.distanceAlert&&(_this.notify(_this.settings.distanceErrorAlert+_this.settings.distanceAlert+" "+distUnit),distError=!0)}void 0!==locationset[0]&&(nearestLoc=locationset[0])}if(!0===_this.settings.featuredLocations&&(featuredset=$.grep(locationset,function(val){return"true"===val.featured}),normalset=$.grep(locationset,function(val){return"true"!==val.featured}),locationset=[],locationset=featuredset.concat(normalset)),!0===_this.settings.slideMap&&$this.slideDown(),!0===_this.settings.pagination&&_this.paginationSetup(page),!0===_this.settings.altDistanceNoResult&&nearestLoc.distance>_this.settings.distanceAlert)return void _this.emptyResult();if(_this.isEmptyObject(locationset)||"none"===locationset[0].result)return void _this.emptyResult();if(_this.modalWindow(),storeNum=-1===_this.settings.storeLimit||locationset.length<_this.settings.storeLimit||!0===this.settings.fullMapStart&&!0===firstRun&&(!isNaN(this.settings.fullMapStartListLimit)||this.settings.fullMapStartListLimit>26||-1===this.settings.fullMapStartListLimit)?locationset.length:_this.settings.storeLimit,!0===_this.settings.pagination?(storeNumToShow=_this.settings.locationsPerPage,storeStart=page*_this.settings.locationsPerPage,storeStart+storeNumToShow>locationset.length&&(storeNumToShow=_this.settings.locationsPerPage-(storeStart+storeNumToShow-locationset.length)),locationset=locationset.slice(storeStart,storeStart+storeNumToShow),storeNum=locationset.length):(storeNumToShow=storeNum,storeStart=0),_this.resultsTotalCount(locationset.length),!0===_this.settings.fullMapStart&&!0===firstRun&&!0!==_this.settings.querystringParams||0===_this.settings.mapSettings.zoom||void 0===origin||!0===distError)myOptions=_this.settings.mapSettings,bounds=new google.maps.LatLngBounds;else if(!0===_this.settings.pagination){var nextPoint=new google.maps.LatLng(locationset[0].lat,locationset[0].lng);0===page?(_this.settings.mapSettings.center=originPoint,myOptions=_this.settings.mapSettings):(_this.settings.mapSettings.center=nextPoint,myOptions=_this.settings.mapSettings)}else _this.settings.mapSettings.center=originPoint,myOptions=_this.settings.mapSettings;if(_this.map=new google.maps.Map(document.getElementById(_this.settings.mapID),myOptions),google.maps.event.addDomListener(window,"resize",function(){var center=_this.map.getCenter();google.maps.event.trigger(_this.map,"resize"),_this.map.setCenter(center)}),!0===_this.settings.dragSearch&&_this.map.addListener("dragend",function(){_this.dragSearch(_this.map)}),$this.data(_this.settings.mapID.replace("#",""),_this.map),_this.settings.callbackMapSet&&_this.settings.callbackMapSet.call(this,_this.map,originPoint,originalZoom,myOptions),"undefined"!=typeof InfoBubble&&null!==_this.settings.infoBubble){var infoBubbleSettings=_this.settings.infoBubble;infoBubbleSettings.map=_this.map,infowindow=new InfoBubble(infoBubbleSettings)}else infowindow=new google.maps.InfoWindow;_this.originMarker(_this.map,origin,originPoint),$(document).on("click."+pluginName,".bh-sl-pagination li",function(e){e.preventDefault(),_this.paginationChange($(this).attr("data-page"))}),_this.inlineDirections(_this.map,origin);for(var y=0;y<=storeNumToShow-1;y++){var letter="";letter=page>0?String.fromCharCode("A".charCodeAt(0)+(storeStart+y)):String.fromCharCode("A".charCodeAt(0)+y);var point=new google.maps.LatLng(locationset[y].lat,locationset[y].lng);marker=_this.createMarker(point,locationset[y].name,locationset[y].address,letter,_this.map,locationset[y].category),marker.set("id",y),markers[y]=marker,(!0===_this.settings.fullMapStart&&!0===firstRun&&!0!==_this.settings.querystringParams||0===_this.settings.mapSettings.zoom||void 0===origin||!0===distError)&&bounds.extend(point),_this.createInfowindow(marker,null,infowindow,storeStart,page)}if((!0===_this.settings.fullMapStart&&!0===firstRun&&!0!==_this.settings.querystringParams||0===_this.settings.mapSettings.zoom||void 0===origin||!0===distError)&&_this.map.fitBounds(bounds),$("."+_this.settings.locationList+" ul").empty(),firstRun&&!1!==_this.settings.fullMapStartListLimit&&!isNaN(_this.settings.fullMapStartListLimit)&&-1!==_this.settings.fullMapStartListLimit)for(var m=0;m<_this.settings.fullMapStartListLimit;m++){var currentMarker=markers[m];_this.listSetup(currentMarker,storeStart,page)}else $(markers).each(function(x){var currentMarker=markers[x];_this.listSetup(currentMarker,storeStart,page)});if($lengthSwap.length&&(_this.lengthUnitSwap($lengthSwap),$lengthSwap.on("change."+pluginName,function(e){e.stopPropagation(),_this.lengthUnitSwap($lengthSwap)})),_this.openNearestLocation(nearestLoc,infowindow,storeStart,page),"undefined"!=typeof MarkerClusterer&&null!==_this.settings.markerCluster){new MarkerClusterer(_this.map,markers,_this.settings.markerCluster)}_this.listClick(_this.map,infowindow,storeStart,page),$("."+_this.settings.locationList+" ul > li:even").css("background",_this.settings.listColor1),$("."+_this.settings.locationList+" ul > li:odd").css("background",_this.settings.listColor2),_this.visibleMarkersList(_this.map,markers),!0===_this.settings.modal&&_this.settings.callbackModalReady&&_this.settings.callbackModalReady.call(this),_this.settings.callbackFilters&&_this.settings.callbackFilters.call(this,filters)},writeDebug:function(){window.console&&this.settings.debug&&(Function.prototype.bind?this.writeDebug=Function.prototype.bind.call(console.log,console,"StoreLocator :"):this.writeDebug=function(){arguments[0]="StoreLocator : "+arguments[0],Function.prototype.apply.call(console.log,console,arguments)},this.writeDebug.apply(this,arguments))}}),$(".accordion-mobile-header-controls").on("click",function(){$(this).removeClass("show"),$(".accordion-inner").removeClass("list-focus")}),$.fn[pluginName]=function(options){var args=arguments;if(void 0===options||"object"==typeof options)return this.each(function(){$.data(this,"plugin_"+pluginName)||$.data(this,"plugin_"+pluginName,new Plugin(this,options))});if("string"==typeof options&&"_"!==options[0]&&"init"!==options){var returns;return this.each(function(){var instance=$.data(this,"plugin_"+pluginName);instance instanceof Plugin&&"function"==typeof instance[options]&&(returns=instance[options].apply(instance,Array.prototype.slice.call(args,1))),"destroy"===options&&$.data(this,"plugin_"+pluginName,null)}),void 0!==returns?returns:this}}}}(jQuery,window,document);